import java.util.*;
public class Prime_count{
    public static int[] solve(int n,int [][] queue)
    {
        boolean sieve[]=new boolean[n+1];
        for(int i=0;i<n;i++)
            sieve[i]=true;
        for(int i=2;i<=Math.sqrt(n)+1;i++)
        {
            if(sieve[i]==true){
                for(int j=i*i;j<=n+1;j+=i)
                {
                    sieve[j]=false;
                }
            }
        }
        int cp[]=new int[n+1];
        int pc[]=new int[n+1];
        for(int i=2;i<=n;i++)
        {
            if(sieve[i]==true)
                cp[i]=cp[i-1]+1;
            else
                cp[i]=cp[i-1];
            if(sieve[cp[i]]==true)
                pc[i]=pc[i-1]+1;
            else
                pc[i]=pc[i-1];
        }
        int ans[]=new int[queue.length];
        for(int i=0;i<queue.length;i++)
        {
            ans[i]=pc[queue[i][1]]-pc[queue[i][0]];
        }
        return ans;
    }
    public static void main(String args[])
    {
        int queue[][]=[[2,6],[11,26]];
        int ans[]=new int[2];
        ans=solve(27,queue);
        System.out.println(ans[0]+" "+ans[1]);
    }
}